import os
from flask import Flask, jsonify, request, session
from database import Database

app = Flask(__name__, static_folder='./build', static_url_path='/')
app.secret_key = b'm\xb5\xe6\xef4\xb5\x02_\x8f\xe4\xffpw\xccu\xc4' # generated by os.urandom(16)

def leaderListtoDict(user):
    # userList: [name, score] -> userDict: {'name': name, 'score': score}
    name = user[0]
    score = user[1]
    res = {'name': name, 'score': score}
    return res

def challengeListtoDict(challenge):
    # challengeList: [challenge,description,length,userCount] ->
    # challengeDict: {'challenge': challengeName, 'description': description, ...}
    challengeName = challenge[0]
    description = challenge[1]
    startDate = challenge[2]
    length = challenge[3]
    userCount = challenge[4]
    res = {
        'challenge': challengeName,
        'description': description,
        'startDate': startDate,
        'len': length,
        'userCount': userCount}
    return res

@app.route('/')
def index():
    # to be changed with login
    session['user_name'] = 'aaron'
    return app.send_static_file('index.html')

@app.route('/leaderboard', methods=['GET'])
def displayLeaders():
    # [[user, score], ...]
    database = Database()
    database.connect()
    leaders = database.getLeaderBoard()
    database.disconnect()
    leaderDicts = [leaderListtoDict(leader) for leader in leaders]
    return jsonify(leaderDicts)

@app.route('/challengeboard', methods=['GET'])
def displayChallenges():
    # [[user, score], ...]
    database = Database()
    database.connect()
    challenges = database.getChallengeBoard()
    print(challenges)
    database.disconnect()
    challengeDicts = [challengeListtoDict(challenge) for challenge in challenges]
    return jsonify(challengeDicts)

# @app.route('/addWorkout', methods=['POST'])
# def update_ProgressDB():
#     data = request.get_json()
#     print(data)
#     challengeName = data['challenge']
#     file = data['file']
#     caption = data['caption']
#     userName = session['user_name']
#
#     # call function to UPDATE db Progress
#     query.updateProg(userName, challengeName)
#     if file != '':
#         # call function to UPDATE db Photo, Caption, username
#         newCap = query.insertPhoto(file, caption, userName)
#         result = {'new caption': newCap}
#     else:
#         result = {'new caption': ''}
#     return(result)

@app.route('/progressUpdated', methods=['GET'])
def get_updatedProgress():
    # call function to SELECT from db
    newProgress = 'function call goes here'
    result = {'progress' : newProgress}
    return jsonify(result)
#-------------------------------------------------------------------------------

# if __name__ == '__main__':
#     app.run(host='0.0.0.0', debug=False, port=os.environ.get('PORT', 80))
